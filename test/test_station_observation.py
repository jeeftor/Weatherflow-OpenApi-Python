# coding: utf-8

"""
    WeatherFlow Tempest API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: jforare@weatherflow.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from weatherflow_openapi.models.station_observation import StationObservation  # noqa: E501

class TestStationObservation(unittest.TestCase):
    """StationObservation unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StationObservation:
        """Test StationObservation
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StationObservation`
        """
        model = StationObservation()  # noqa: E501
        if include_optional:
            return StationObservation(
                status = weatherflow_openapi.models.status.Status(
                    status_code = 0, 
                    status_message = 'SUCCESS', ),
                station_units = weatherflow_openapi.models.station_units.StationUnits(
                    units_temp = 'f', 
                    units_wind = 'mph', 
                    units_precip = 'in', 
                    units_pressure = 'mb', 
                    units_distance = 'mi', 
                    units_direction = 'cardinal', 
                    units_other = 'imperial', ),
                station_id = 67,
                station_name = 'Home',
                public_name = 'Public Location Name',
                latitude = 29.00724,
                longitude = -80.88067,
                timezone = 'America/New_York',
                elevation = 21.845,
                obs = [
                    weatherflow_openapi.models.station_observation_values.StationObservationValues(
                        timestamp = 1495732068, 
                        air_temperature = 29.1, 
                        barometric_pressure = 1002.9, 
                        sea_level_pressure = 1004.7, 
                        relative_humidity = 77.0, 
                        precip = 0.0, 
                        precip_accum_last_1hr = 0.0, 
                        wind_avg = 3.5, 
                        wind_direction = 289.0, 
                        wind_gust = 5.1, 
                        wind_lull = 2.2, 
                        solar_radiation = 330.0, 
                        uv = 8.0, 
                        brightness = 7000.0, 
                        lightning_strike_last_epoch = 1.4956524E+9, 
                        lightning_strike_last_distance = 22.0, 
                        lightning_strike_count_last_3hr = 0.0, 
                        feels_like = 21.4, 
                        heat_index = 21.4, 
                        wind_chill = 21.4, 
                        dew_point = 17.2, 
                        wet_bulb_temperature = 18.6, 
                        delta_t = -2.8, 
                        air_density = 1.18257, 
                        air_temperature_indoor = 29.1, 
                        barometric_pressure_indoor = 1002.9, 
                        sea_level_pressure_indoor = 1004.7, 
                        relative_humidity_indoor = 77.0, 
                        precip_indoor = 0.0, 
                        precip_accum_last_1hr_indoor = 0.0, 
                        wind_avg_indoor = 3.5, 
                        wind_direction_indoor = 289.0, 
                        wind_gust_indoor = 5.1, 
                        wind_lull_indoor = 2.2, 
                        solar_radiation_indoor = 330.0, 
                        uv_indoor = 8.0, 
                        brightness_indoor = 7000.0, 
                        lightning_strike_last_epoch_indoor = 1.4956524E+9, 
                        lightning_strike_last_distance_indoor = 22.0, 
                        lightning_strike_count_last_3hr_indoor = 0.0, 
                        feels_like_indoor = 21.4, 
                        heat_index_indoor = 21.4, 
                        wind_chill_indoor = 21.4, 
                        dew_point_indoor = 17.2, 
                        wet_bulb_temperature_indoor = 18.6, 
                        delta_t_indoor = -2.8, 
                        air_density_indoor = 1.18257, )
                    ]
            )
        else:
            return StationObservation(
        )
        """

    def testStationObservation(self):
        """Test StationObservation"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
