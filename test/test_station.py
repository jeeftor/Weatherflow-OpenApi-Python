# coding: utf-8

"""
    WeatherFlow Tempest API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Contact: jforare@weatherflow.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from weatherflow_openapi.models.station import Station  # noqa: E501

class TestStation(unittest.TestCase):
    """Station unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Station:
        """Test Station
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Station`
        """
        model = Station()  # noqa: E501
        if include_optional:
            return Station(
                station_id = 67,
                name = 'Home',
                public_name = 'Public Location Name',
                latitude = 29.00724,
                longitude = -80.88067,
                station_meta = weatherflow_openapi.models.station_meta.StationMeta(
                    elevation = 33.2, 
                    share_with_wf = True, 
                    share_with_wu = True, ),
                devices = [
                    weatherflow_openapi.models.device.Device(
                        device_id = 128, 
                        serial_number = 'AR-12345678', 
                        device_meta = weatherflow_openapi.models.device_meta.DeviceMeta(
                            agl = 2.2, 
                            name = 'Pool Air Device', 
                            environment = 'outdoor', 
                            wifi_network_name = '', ), 
                        device_type = 'AR', 
                        hardware_revision = '3', 
                        firmware_revision = '3', 
                        notes = '', )
                    ],
                station_items = [
                    weatherflow_openapi.models.station_item.StationItem(
                        location_item_id = 55, 
                        station_id = 67, 
                        device_id = 55, 
                        item = 'air_temperature_humidity', )
                    ]
            )
        else:
            return Station(
        )
        """

    def testStation(self):
        """Test Station"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
